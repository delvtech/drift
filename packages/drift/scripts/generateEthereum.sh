#!/bin/bash
set -e

# SETTINGS
branch="main"
repo_url="git@github.com:ethereum/execution-apis.git"
schema_doc="refs-openrpc.json"
out_dir="src/ethereum"
ts_out_filename="ethereum.ts"
schema_out_filename="openrpc.json"

package_name=$(jq -r .name <package.json)
script_name=$(basename "$0")
ts_out_basename=$(basename "$ts_out_filename" .ts)

cat <<EOF

+
|  $package_name $script_name
|
|  Generating types from ethereum OpenRPC schema...
|
|  Branch:        $branch
|  Repository:    $repo_url
|  Output paths:
|    - Schema:    $out_dir/$schema_out_filename
|    - Types:     $out_dir/$ts_out_basename.ts
+

EOF

temp_clone_dir="$(basename "$repo_url" .git).temp"
temp_out_dir=$(mktemp -d)
temp_schema_out_path="$temp_out_dir/$schema_out_filename"
temp_ts_out_path="$temp_out_dir/$ts_out_basename.ts"
trap 'rm -rf "$temp_out_dir"' EXIT

# Clone the repo if it doesn't exist
if [ ! -d "$temp_clone_dir" ]; then
  echo "Cloning $branch from $repo_url"
  git clone --depth 1 "$repo_url" --branch "$branch" "$temp_clone_dir"
fi

echo "Generating OpenRPC schema..."
(
  cd "$temp_clone_dir"
  npm install --package-lock=false --force
  npm run build
)
mv "$temp_clone_dir/$schema_doc" "$temp_schema_out_path"
rm -rf "$temp_clone_dir"

echo "Generating types..."
npx open-rpc-typings -d "$temp_schema_out_path" --output-ts "$temp_out_dir" --name-ts "$ts_out_basename"

# Convert basename to PascalCase for the namespace
namespace=$(echo "$ts_out_basename" |
  sed 's/-/ /g' |
  awk '{
      for (i=1; i<=NF; i++) {
        $i = toupper(substr($i,1,1)) substr($i,2)
      }
      print
    }' |
  sed 's/ //g')

{
  cat <<-EOF
		/* eslint-disable */
		// @ts-nocheck
		
		// This file was generated using the OpenRPC schema from the ethereum/execution-apis repo.
		// See https://github.com/ethereum/execution-apis for more information."
		//
		// Changes to this file will be lost when the code is regenerated."
		// Generated by: $0"
		  
		export namespace $namespace {
		$(sed 's/^/  /' "$temp_ts_out_path")
		}
	EOF
} >"${temp_ts_out_path}.edit" && mv "${temp_ts_out_path}.edit" "$temp_ts_out_path"

echo "Cleaning up..."
rm -rf "$out_dir"
mv "$temp_out_dir" "$out_dir"

echo "âœ… Types generated in $(realpath "$out_dir")"
